<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (CovidExcelforTableau)' inline='true' name='federated.1x4du8k0ui6pcl15p8nbw11qczd7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidExcelforTableau' name='excel-direct.0jbsg1w0x7kqnf1ezvigy0691br3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/JRP/Covid Project/CovidTableau/CovidExcelforTableau.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jbsg1w0x7kqnf1ezvigy0691br3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jbsg1w0x7kqnf1ezvigy0691br3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EE23D47B9F5C4C6D9DD7AF3F2E0434BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EE23D47B9F5C4C6D9DD7AF3F2E0434BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EE23D47B9F5C4C6D9DD7AF3F2E0434BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_EE23D47B9F5C4C6D9DD7AF3F2E0434BD]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_EE23D47B9F5C4C6D9DD7AF3F2E0434BD'>
            <properties context=''>
              <relation connection='excel-direct.0jbsg1w0x7kqnf1ezvigy0691br3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (CovidExcelforTableau1)' inline='true' name='federated.0e5b5u511a4lbx11vxcbu1g883u6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidExcelforTableau1' name='excel-direct.14gis2s0djmgva1abvln31xzleuy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/JRP/Covid Project/CovidTableau/CovidExcelforTableau1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.14gis2s0djmgva1abvln31xzleuy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.14gis2s0djmgva1abvln31xzleuy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A1C56A6A28794F92833099A19C10294E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A1C56A6A28794F92833099A19C10294E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A1C56A6A28794F92833099A19C10294E]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_gold_10_0' type='palette'>
            <map to='#9e3a26'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c54923'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e2621f'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f3852a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f8aa4c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A1C56A6A28794F92833099A19C10294E'>
            <properties context=''>
              <relation connection='excel-direct.14gis2s0djmgva1abvln31xzleuy' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (CovidExcelforTableau2)' inline='true' name='federated.0tndcsm0jcq1k016lslgw0g4fvxe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidExcelforTableau2' name='excel-direct.0wk8q5l00uag2r1b0teen0vb8kkv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/JRP/Covid Project/CovidTableau/CovidExcelforTableau2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0wk8q5l00uag2r1b0teen0vb8kkv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0wk8q5l00uag2r1b0teen0vb8kkv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7AE9CB56541F43D4A7E027457BD8FA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7AE9CB56541F43D4A7E027457BD8FA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7AE9CB56541F43D4A7E027457BD8FA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7AE9CB56541F43D4A7E027457BD8FA37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7AE9CB56541F43D4A7E027457BD8FA37]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7AE9CB56541F43D4A7E027457BD8FA37'>
            <properties context=''>
              <relation connection='excel-direct.0wk8q5l00uag2r1b0teen0vb8kkv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (CovidExcelforTableau3)' inline='true' name='federated.1wpznc61hxdfde125l6bb0ardtrs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidExcelforTableau3' name='excel-direct.09ok9hj1gwnoe811pmifx0qp3zzy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/JRP/Covid Project/CovidTableau/CovidExcelforTableau3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.09ok9hj1gwnoe811pmifx0qp3zzy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.09ok9hj1gwnoe811pmifx0qp3zzy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DDA853E71154232A60E5617CCD43E05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DDA853E71154232A60E5617CCD43E05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DDA853E71154232A60E5617CCD43E05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DDA853E71154232A60E5617CCD43E05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6DDA853E71154232A60E5617CCD43E05]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6DDA853E71154232A60E5617CCD43E05]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6DDA853E71154232A60E5617CCD43E05'>
            <properties context=''>
              <relation connection='excel-direct.09ok9hj1gwnoe811pmifx0qp3zzy' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentages of population infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CovidExcelforTableau3)' name='federated.1wpznc61hxdfde125l6bb0ardtrs' />
          </datasources>
          <datasource-dependencies datasource='federated.1wpznc61hxdfde125l6bb0ardtrs'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wpznc61hxdfde125l6bb0ardtrs].[tmn:date:qk]' value='350' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]&#10;[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]' value='Population infecrted over a year'>
              <formatted-text>
                <run>Population infecrted over a year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]' />
              <text column='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]' />
              <color column='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]' />
              <text column='[federated.1wpznc61hxdfde125l6bb0ardtrs].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wpznc61hxdfde125l6bb0ardtrs].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1wpznc61hxdfde125l6bb0ardtrs].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{EB2343D9-31DC-424B-AF9F-2B0046998E91}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Population infected by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CovidExcelforTableau2)' name='federated.0tndcsm0jcq1k016lslgw0g4fvxe' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tndcsm0jcq1k016lslgw0g4fvxe'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[Longitude (generated)]' field-type='quantitative' max='15996104.00911073' min='-14442375.040837256' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[Latitude (generated)]' field-type='quantitative' max='8396469.6752644796' min='-7313712.5919926111' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[none:Location:nk]' />
              <color column='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[Latitude (generated)]</rows>
        <cols>[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0E25E3CB-99B2-484A-B968-941C071DACBC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CovidExcelforTableau1)' name='federated.0e5b5u511a4lbx11vxcbu1g883u6' />
          </datasources>
          <datasource-dependencies datasource='federated.0e5b5u511a4lbx11vxcbu1g883u6'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]' direction='DESC' using='[federated.0e5b5u511a4lbx11vxcbu1g883u6].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e5b5u511a4lbx11vxcbu1g883u6].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6F58A620-1D52-4185-BCA0-BD2211E8A652}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CovidExcelforTableau)' name='federated.1x4du8k0ui6pcl15p8nbw11qczd7' />
          </datasources>
          <datasource-dependencies datasource='federated.1x4du8k0ui6pcl15p8nbw11qczd7'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[:Measure Names]' value='245' />
            <format attr='color' value='#1b1b1b' />
            <format attr='text-format' field='[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[Multiple Values]' value='n#,##0.000;-#,##0.000' />
            <format attr='height' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00007f' />
            <format attr='background-color' scope='rows' value='#aaaaff' />
            <format attr='background-color' field='[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[Multiple Values]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='font-size' scope='cols' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#f5f1f0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#00aaff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{CE9ED4AB-C57C-426B-AF25-28CD21B3C9FE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='36000' id='3' name='Sheet 1' w='82400' x='800' y='63000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36000' id='9' name='Sheet 2' w='41200' x='42000' y='27000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26000' id='13' name='Sheet 4' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36000' id='11' name='Sheet 3' w='41200' x='800' y='27000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='28250' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]&#10;[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='10' name='Sheet 2' pane-specification-id='0' param='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[sum:PercentPopulationInfected:qk]' type-v2='color' w='16000' x='83200' y='29250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='226' h='29250' id='12' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]' type-v2='color' w='16000' x='83200' y='37375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='200' h='26000' id='13' is-fixed='true' name='Sheet 4' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36000' id='11' is-fixed='true' name='Sheet 3' w='41200' x='800' y='27000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='29250' id='12' name='Sheet 3' pane-specification-id='0' param='[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]' type-v2='color' w='16000' x='83200' y='37375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36000' id='9' is-fixed='true' name='Sheet 2' w='41200' x='42000' y='27000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='10' name='Sheet 2' pane-specification-id='0' param='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[sum:PercentPopulationInfected:qk]' type-v2='color' w='16000' x='83200' y='29250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36000' id='3' is-fixed='true' name='Sheet 1' w='82400' x='800' y='63000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28250' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]&#10;[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{52B3E418-C504-4B8F-A434-9308791BF578}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]&#10;[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]</field>
            <field>[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]</field>
            <field>[federated.1wpznc61hxdfde125l6bb0ardtrs].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D73808E-2CD5-4A4D-A3C8-F94D9E845E01}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tndcsm0jcq1k016lslgw0g4fvxe].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BA56CEEC-5BA6-45C4-AEC0-E4C07A855B71}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C3C3DC7-04E5-4C30-B2F8-419F6C09CB03}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x4du8k0ui6pcl15p8nbw11qczd7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F3278F8-E8C5-4137-9E84-733400C06801}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Forecast Indicator:nk]</field>
              <field>[federated.1wpznc61hxdfde125l6bb0ardtrs].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0e5b5u511a4lbx11vxcbu1g883u6].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 4' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6D02F731-1146-4ECC-B79C-AAC07CD38304}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
      yvn8gVqGh46jujzs3XeUd46fIFhWeXcTP9VkmJtbwhswWU+myeXyJFZmmJ6dpqS8jOT6Iiuz
      K8yHTOZX16lQl8k11GC7Sx/6U7EeOLw4ibeiEZt66/YnN5BcHp9jZ0sddzrqw7Bd1wPHo6vE
      sio1lYE7Hre6vAwuH+Ve+z27trUe+N6yDVrguxOsavoARwnaW+ruuy3bAa+/nA+yiUh5yHou
      84POthgDW1hY3B5LwBYW2xhLwBYW2xhLwBYW2xhLwBYW2xhLwBYW2xhLwBYW2xhLwBYW2xhL
      wBYW2xhLwBYW2xhLwBYW25gtixkKhQLpdPqTtGdbkTZgOgntJZ+0JduHt1fgic/2uv4Pjdvt
      tp5OaGHxacTqQltYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtY
      bGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtYbGMsAVtY
      bGPuiYClmSMSiX3MNAwi0fV7YY7FpxQpJeOXB9lIZj9uSoTDkXti0/th5DMMDgySNz56GuFw
      +Lavb2aLgGU+TV9fH//+936Pvr4+4pnCloMnB06znLyNsYV1evtGNw3P8l/+4Pc5d/Y0P3rl
      DYy7bNhz+vTp4nm5NOfO9981U3diYqSfd46f4lxvH5m8+YGuSyFL38WhD3Wd9cUxLk+vfVQz
      H2xic/yH//rnnDt7mp+8/i73YsOl62X9MZm88DZpVx0lLhsg+dM/+n/o7e3lBy99j3juzr/3
      VgzOnD53y6dDvaeJ5QFMzp+/8IFSWp0ZY3b11sbrzddfp7GtHe0OTeTdyuXMTd+fPn3mtsds
      ecC30J10dXUxPTlJV1cX0sjyzlvHsNlUanbsZWTgAkR1DnTuILk2SzSWQnX62LvTvyXRytpG
      DvUcYWH4NOfHV/CkZ4ml89jcAToby7k4Mk4iFqOrp4e+vj503caOHU0szEzQd86JaSvh0L4O
      zHyGH/74FaoqK9DcZXQ2lHHmwhCmYXD4kUfoP3uK+clJHn7+a1QHnAyNz/OlL30RANPIcfyd
      k2i6RmVjO+szw6Q1L6noKnu7ujeva6djdzv5dIbo3CgnLq8QtBuUNXbiMdaZXIpiSJXDe5r4
      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
    </thumbnail>
    <thumbnail height='240' name='Sheet 1' width='240'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='240' name='Sheet 2' width='240'>
      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
      YII=
    </thumbnail>
    <thumbnail height='240' name='Sheet 3' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATpklEQVR4nO3deXCcd33H8ffzPHuvtKtbWtnWZVnxIdux4yR1nMOQBBKgHIFAaSlnU+iU
      Tqctnf7RPyhToAU6HUohDDCBofxBoC0lCSGkcQKYHI4dx4dsx5dkXbYkW7buPZ+jf8hxYkgy
      TSa7yS/+vP7Ss5Kf308ev72r1e7ztYIgCBAR41iWZdmv9SZE5JVTwCIGU8AiBlPAIgZTwCIG
      U8AiBgu91huQ15hfYurcFIUgQk1NNbGw81rvSF4G3QNfwvzSPA98/xvcs+0xDu4+wPjU3Et+
      fRAcZduDTwNwun8fo1Oll7VeYbKfX+7tf8X7ld+le+BLWPbMMHePNPKVv3o7TdURwOW/7/wc
      P3/qJH/8N//AVakJvvGjB3lm/zP8/kc+zrGffJuHj82wY+ZzbK2eoOHKlex++Ifct203w5MB
      //jVfyY2/iSf/eJdtL71M/zJ1UXufmgfo/ueZOMffAan73vcdf8B/nPdTfzrFz5N7LX+C3gD
      UMCXMN/3iCYSOLYFwOzQXvLtN/H525bxi58/yrIbWkn1bOVL738H9+wa5dNf+lOqvzfFR961
      nkMP/IhcyWdhboG3feyviZ/4Obv39jH+k2/RdfmVnPzfL9PX8hFO08mf/91m7r7/ILdc9Q7e
      23orH7xxI9HX+Ht/o9BD6EtYVcMSVp18hCcODjM3PMzU3DxFDyLRKCW3RAhIpmpIV1Xj2A7x
      ZApwiYYdrMXmsUIh0uk6UlUJfB+sUIRbb/8Yn//KP9GZtknUNFCTrsHBJxyN4/sBVkz5vloU
      8CXMjqb50Kf+kOKJnTyw8zil9Aoy/igP/PxhVl55FY3JOpY1VGNHErRlGoEVtNZO8+uDp4g2
      LCUdc6hvaaMq6hCvW0r70jbedNu7eOqhe7j/0T6CRD09rdWEQlG6OzLUtiyjbn6AX2x7Eve1
      /ubfICy9mUHETHozg4jhjAs4CAI8z3uttyHyumBcwLAYsYgYGrCILFLAIgZTwCIGU8AiBlPA
      IgYry2uhg8AnN3uOmYJFpqkeAo/x0WHmSzZt7W1EHJfh/kFyrk+qIUOmvprTJ4eYD6ppba6h
      lM/hOFEidpG5hTy19fXl2KaI8coScCk/y4H9+xmdt7nt1q2UFs6x4/FHmS5YXJd8N8sb8mzf
      9mvcaIjlG28gk5znie3bmSzGuebGm8ifGSWZbKWKEQ6eKnDzVgUs8kLK8lLKwPdxvYAjR5+h
      d00vowOHCKU7aEx67D9+kvVLIjw1kaC3LU00FmXoge8TXPtHdIRH2HfEJfBzOF4EP2qzYk0P
      VY713LnPv5AjFNIbqeTSZtu2VZYKLNsmbAPnuwssiETC2I5FyXNxvQiP3vtdtllV3Hrb+3Fm
      EjRXhXCcOqzSMP7UEbbtGOJtH7+D6pCN7/sUCoUL5/d9n2KxWI6tixilIndjYctiem6eRFDC
      scP48To+9Zd/S9g9x5N9E3S3e4yfmiPBEdxIA07Tat7+3s0sjJ+gPxpheVOSeDwO6B5Y5PnK
      UsHUqT7u/PoPmSoViXRs4UNvv5p993yHYzMJ7vj0J3GY4gff+AbD8xFu/8gnaFnazePf+yYP
      Wit5/7vWMjUygBNJsrIuy46nt9N5y616ulzkBRj3dkLdA4ss0tsJRQyngEUMpoBFDKaARQym
      gEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDKaARQymgEUMpoBFDGb8m2r94iSFwW+W
      dQ072U10yQfLuobIK2F8wPgufn60rEtY4Zqynl/kldJDaBGDKWARgylgEYMpYBGDKWARg5Ul
      4MB3Gd73K3764G8Wb/Dy3PeDO/mXf/8uZ/MB4PLQj7/Dl772fU7NFAGPh370Lb5293bGZgoc
      PnyMoaEZ5seOs/OxR8uxRZE3hDINN1sgl+phSXAGgDMnh+i65p1ckywxeHyAaJ1L3eW38Mnq
      PEeGhknQR2rtO3iff4jhoZOEvTwWOfonZ0l0rC3HFkXeEMoScCSR5rLONAcOnQMg73lkmpqp
      jbmcOH2EmQWH9qXt1MQhcvI4g8fytN+eoSWU4MxTo5RmT/Cb7TvY/O73sGZJmiAILpqF5Ps+
      pVJp8aBUeKEtvKo83yeXy5V9HZGXqzIv5AjA83yCIMC2bByg5AUEvk/ghIhHCxSLAZDDt0NY
      iQa6etLkZqbI+Q3ELC5MYgiCAMuysG37/HGIco85sy2LcDhc5lVEXr6yBJybnWDXzj6Gx8cZ
      n3foaY6zZ8cj+EDHmqtpqC3x8KO/Zr/v0rrqSrq3XsVDjzxIn1egbd0W3GmXpcszJDjFjsf3
      sPXaDTiOAywGDM8F7btOOb6Fi1iWpVEu8rpUnn+VloVlWWQyGbAsErVNLGueYDIXpj1TSygU
      0NVax6n5EB2tDYSijXS3zXHWaqGjtY5c0iYcrqI6uowgMlWWLYq8ERg/3MzPj5M7+tmyrulU
      9xLr/IuyriHycmm4mYjhFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEqcrFjv5TjYN8BciRY
      v341UadI3869zJZcGtt66FnWwOAze5kMGli5PENhfpZQKEncyTI5PU/r0mWV2KaIcSoS8MyZ
      UUZOTeBbDiOZJXQ3lDh6fIRoKkayqYQ/e5yDR4bIFfuJJW6gNDVOMtlK1Bumf8pRwCIvoiIB
      ZxeyLO1eRTrsMTo2SmckRu2KNazI1NDQ1Mjx+39A71s/THt4jD19k/hultPDx0hmmtiyuYsg
      CC5MZAiCAN/38Txv8dj3y77/IODCeiKvJxUJuCnTyo6f3sdU3qKpZx2+nWZ4/yMc3Rti0/Vv
      IZKPk4pYEEpi+VMEc2P07T3Jdd0fIGotBvTsMLPfCfjZIWdl5Pv+RcPVRF4vKjKZwXWLBIHF
      /OkT9M+EWdVahRuuJh5Ms/PAaVZFDjNQ/Sa6/D6O59oJB1mSsXqy82OEmrvpbUtjnT+XJjOI
      LKrYZIbc2SG+9uUv8t2f7ad3VSfxeJj/ueurfOHf7qapo5P6je9l8sm7+cHTIdq6lhKNRIjE
      EqzqrGVuYBdGzX4RqSDNRvp/0D2wvB5pNpKI4RSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSw
      iMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjB
      FLCIwSoymaE0N8Zd3/4ukzTyqT/7BPUxj3v/45s8PR7m43d8jPZam3u+fyfPeJfxwfdsZXr0
      BMlkhobIOPuOjXPDjW+uxDZFjFOR60IPH9mD1XAZTeF5DoxM013tMkITPek8ewazdOV3M9p8
      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
    </thumbnail>
    <thumbnail height='150' name='Sheet 4' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAACWCAYAAADg+AXVAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARnklEQVR4nO3de1yUddrH8Y9JZYhFW+shxnxiA0rs4FQekxRPiZq0allpdiDRzVLclUp6
      rbRpT7C7QpYPoK1Z0eOp0sSwArVNU7FMtEdXJV1NFEVd2QWNmqnr+eNmYAYGZrAMf3a9e/F6
      wcx1X/fvnrm/cx/mVzUTEUEpZaQLmnoASqkzpwFWymAaYKUMpgFWymAaYKUMpgFWymAaYKUM
      pgFWymAaYKUMFuBvYbNmyWdxGEqpM6FHYKUMpgFWymAaYKUMpgFWymAa4PNUj/SJ9EifiMhE
      0ns09WjU2eL3XWh1A7kynEF+VK6KTyZm7hmsokc0RZ9GUXSmy/8ozQkb0YOXn+tGz/CWAAQF
      /EDFwUO8N+NdRs89+XMPSDWoDelFE/QIrJTJ9Ajsty+JafZl1e9tAEgvmsAkPqFn2Bo2NN3A
      fqTmAEQlj2X59Cspemk53XruAWBHWXPa3PwbnhlyOaBH4HPLUSaHJWuAzy7rVDR25lBSngwn
      POgCnBXHAFg9O5f4pH9yABiXmwxAVtX5+bVZyUhWTRfXKXnbXrcC8Je07gyOvILgFkDlNwDs
      XPUBo0dvY+vpRg7xhq4ApCddzen5r9Fn8gFqWnzP0cI9TC50X6AFvab2J21CRyKvuaTqEags
      O8KqZ5cyes4JgOoeHWKjeWO2tY4e7S8mgJrTcsDt1Lw5nR+PBSB7xvV0DA7AWXGMnKcXWXVz
      Tnj0BHhjdlePnsAv7nRfA3zWNCcqfSwASx/5jrR7Ukle5SBkxEAAViwcwwct53HL5BLmxiQD
      MNfHNbCtZ3vrl3dz6DP4IIVHIWyElfrcpXeTk3YCW3xxo0bZf6IVrs4BxTyX6h7e+gTR8zZ4
      98l5DF7zLwCO0ooRmWNZ+sqDpO1JAyA+D2hr5/WlUdyQtwyAjtdto4gW3Bx9E8/FtKvqZ4Xt
      huSH2Zx0EQCZd/2F21Y5CHl8BAWvPArAwtOzGfZaZXVPgBvylnn0BKr6aoDVjxVxG39+vDUA
      /0h9icRVlQAUvZ0LwJP9I/jo8b7Ev5hN2hH/Wn7+ohWE0W6PFb2dD8Dc9beSGh1OD4obcTp/
      KT1vu8z6df+XrNntzzLHefGenFqPlfN24ibWjxlC9GDr8oK8oxAaTEgAbFq+zRrraYBKClcW
      MGyl+/JhJE2xcXT+qwA84Xqt5rzH8yMTAZj1hJ2I1zawu6onWH3dewK1+p7/9CaWUgbTAJ8t
      d3SgS8BxugQcZ837dU/p8t7bzdGAUHr7871UgyqBSv5dfibLXkJwKwhuBTh/wPljhnHkW+oM
      YV8Zh5zQ7dFouj0azX2RF3pftkd7bmkF27cUs32L+yVAJQWF/6Kg8F/QuT13uPV09a235y+E
      nkKfJVcGXdRwQVkl5VzAhY3Y/wLDfgNA0sv9GdezNVcG1fr8/aqRg+Qbylypu/wCP3cGb98X
      1zOEI18wdmRLsmZaM0nm/18U88tOsOP9zTyVZJ3yrj4AtLyQS4BBWckAHjfwahzz6AmQNbOH
      R0+Ap5IKrJ6/EBrgs+R4xXcNFwS3oBU/4HD429FG2toxADxSvpkHey3gvcLK6ptO43KTyQpr
      7Cj/w+atVQl+5L+IjoBPfF0H9+/H2qVdKZ+/iF7RewEoPPo9rokutYdwYPk67ly+zvojOJDo
      O+1MShlI/lbr/sDwX+Xw7ikH32DdbQd8TmI5UNXvzuXrPHoC5G9tbfX0vfHnBQ3w2fL3A2x2
      Xg9A9ODLYYPnaXT/YRG0ce7j41V+9rv1WqJCrF/z4nNZWNhwub9y0zcCsPXBAcQldiD10Ybv
      RN864DeEsJv4R/fgcwiBzQk8/X1Nv7LTrFm0njWXhiBZHQCI6gHvFh5iWzkMGBBhLTZ3d/1j
      qOoJVV9VufUEkKwOVk9zv5hvFL0GVspgGuCzZfdnTJ1TytQ5pVz/xHBSB7UgkOaEjYghbEQM
      sx9pxa45q8ly/wppwx7WHILbx3SnSzB0CQYCW9AmGNhZwo5y2FEO3WJvIiwQAtv8ivvSH+K+
      9IeY0f8Mx/llAXxZwOT0Eq545F7WpocTGQyRwQAX0j66M+/9T8fq8p2FRyinA7GPtyKQ5gTS
      nDY3h5O+YSB1hjD6t+zfMJC46EDiogMJBggOZlJsBzhZDCeL2VgInN7NrKxSLhk+jEuGDyN3
      WlvaBNasv310Z7ILB/OwW09XX/eerr4bf6KzExPoKfRZ8z2fTH4dgJGnhpKyJJGp7jOxUt8k
      Pqmk1qliMQn3f8R1i/pScNK6pqPyG/53XAoPvLmb30/YAsBHmcPYc+puKksO8k7KCgBm5j1O
      eqOvga1xAnwy9VVuLOjBy8/dzeeTXDOsPGdNAZx+60MmDGpHZvrvOfWKdd+6ZMs2Un63mryC
      YZ7XwEs+ZlrHviQsngRAxpUXE4CTsp3/YGJf67vkxVUvwIap8+hZfBcAryXHcWRmADi/5fie
      fwLwVtpqlrn1BEhYPMmjJ8DEvjnVPX8Jmvn7fyfU/yaWUucePYVWymAaYKUMpgFWymAaYKUM
      5vdNrM8///xsj0Up1Uh+B1gpkzVb6vm3jGyacfzU9BRaKYNpgJUymAZYKYNpgJUymAZYKYNp
      gJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNp
      gJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNp
      gJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNp
      gJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUymAZYKYNpgJUy2DkT4G8PrCRpYAQxmfvq
      qcgH8plis2Hz9jMlv84SZV9kMq5XRHVNRK9xZH5R5veY9mXGeF+XLQabLQbXUPOn1DMmt5/6
      t8vJpuRb2JR8CzabDS+bUc9ix/kscxx9OoXSp1MoNlsonfqM4/V/fFt7I4hpcGxTsNmmkO9X
      ra2m1uf4ivkgaSidQm3YQjthC+3E0KQPKHY2XOuq91Xr3ttV67XeYGW7ljLjgQHYI9xe/wg7
      dyet5IDrbZamVLlfcqYNkJxpAySy68OSGNddBmXs9V67N0Nkb4YMGpUtpf703jtPhoYPlZe3
      V4ij6p+K7S/L0PChMq+eVdSWl9BJpm8Umb7R3w2q7bCIHJbsUX0ldZvDa4VjW6r0HTpP+g6d
      JxkJIZKQ509fh2ycbhd7/BIpqnBIUYVDRCqlJH+69GnE9jk2Tpeuccuka9wyOelHrau+4dpy
      ESmXtYl2sSfkSEmliFSWiFSWSE6CXeyJa6W8Vr17ravevbbcS617b1dt3d41WOL5c25ziIhD
      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
    </thumbnail>
  </thumbnails>
</workbook>
